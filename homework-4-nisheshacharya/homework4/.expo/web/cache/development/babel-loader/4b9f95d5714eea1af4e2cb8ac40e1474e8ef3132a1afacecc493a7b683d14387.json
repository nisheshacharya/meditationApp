{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useReducer, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useRef } from 'react';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar MED_TIME = 10;\nvar REST_TIME = 2;\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    started = _useState2[0],\n    setStarted = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    paused = _useState4[0],\n    setPaused = _useState4[1];\n  var _useState5 = useState(MED_TIME + REST_TIME),\n    _useState6 = _slicedToArray(_useState5, 2),\n    count = _useState6[0],\n    setCount = _useState6[1];\n  var _useState7 = useState('white'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    color = _useState8[0],\n    setColor = _useState8[1];\n  var ref = useRef(null);\n  var clearTimer = function clearTimer() {\n    if (ref.current) {\n      clearInterval(ref.current);\n      ref.current = null;\n    }\n  };\n  var reset = function reset() {\n    clearTimer();\n    setStarted(false);\n    setPaused(false);\n  };\n  var startTimer = function startTimer() {\n    clearTimer();\n    ref.current = setInterval(function () {\n      setCount(function (prev) {\n        if (prev === REST_TIME) {\n          setColor('Orange');\n        }\n        if (prev > 0) {\n          return prev - 1;\n        }\n        reset();\n        return MED_TIME + REST_TIME;\n      });\n    }, 1000);\n  };\n  var start = function start() {\n    setStarted(true);\n    startTimer();\n  };\n  var stop = function stop() {\n    reset();\n    setCount(MED_TIME + REST_TIME);\n  };\n  var pause = function pause() {\n    setPaused(true);\n    clearInterval(ref.current);\n  };\n  var resume = function resume() {\n    ref.current = setPaused(false);\n    setInterval(function () {\n      setCount(function (prev) {\n        if (prev > 0) {\n          return prev - 1;\n        }\n        reset();\n        return MED_TIME + REST_TIME;\n      });\n    }, 1000);\n  };\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: color\n    }],\n    children: [_jsxs(\"p\", {\n      children: [\" \", count]\n    }), started ? _jsx(Button, {\n      title: \"Stop\",\n      onPress: stop\n    }) : _jsx(Button, {\n      title: \"Start\",\n      onPress: start\n    }), started && !paused ? _jsx(Button, {\n      title: \"Pause\",\n      onPress: pause\n    }) : null, started && paused ? _jsx(Button, {\n      title: \"Resume\",\n      onPress: resume\n    }) : null]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","useReducer","useState","Button","StyleSheet","View","useRef","jsxs","_jsxs","jsx","_jsx","MED_TIME","REST_TIME","App","_useState","_useState2","_slicedToArray","started","setStarted","_useState3","_useState4","paused","setPaused","_useState5","_useState6","count","setCount","_useState7","_useState8","color","setColor","ref","clearTimer","current","clearInterval","reset","startTimer","setInterval","prev","start","stop","pause","resume","style","styles","container","backgroundColor","children","title","onPress","create","flex","alignItems","justifyContent"],"sources":["D:/CS571 React Native/Home Work/Day4/homework-4-nisheshacharya/meditation/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useReducer, useState } from 'react';\nimport { Button, StyleSheet, View } from 'react-native';\nimport { useRef } from 'react';\n\nconst MED_TIME = 10;\nconst REST_TIME = 2;\n\nexport default function App() {\n  const [started, setStarted] = useState(false);\n  const [paused, setPaused] = useState(false);\n  const [count, setCount] = useState(MED_TIME + REST_TIME);\n  const [color, setColor] = useState('white')\n  const ref = useRef(null);\n\n\n  const clearTimer = () => {\n    if (ref.current) {\n      clearInterval(ref.current);\n      ref.current = null;\n    }\n  }\n  const reset = () => {\n    clearTimer();\n    setStarted(false);\n    setPaused(false);\n  }\n\n  const startTimer = () => {\n    clearTimer();\n    ref.current = setInterval(() => {\n      setCount(prev => {\n        if (prev === REST_TIME) {\n          setColor('Orange')\n        }\n        if (prev > 0) {\n          return prev - 1;\n        }\n        reset();\n        return MED_TIME + REST_TIME\n      })\n\n    }, 1000)\n  }\n\n  const start = () => {\n    setStarted(true);\n    startTimer();\n\n  }\n  const stop = () => {\n    reset();\n    setCount(MED_TIME + REST_TIME);\n  }\n  const pause = () => {\n    setPaused(true);\n    clearInterval(ref.current);\n\n  }\n  const resume = () => {\n    ref.current = setPaused(false)\n    setInterval(() => {\n      setCount(prev => {\n        if (prev > 0) {\n          return prev - 1;\n        }\n        reset();\n        return MED_TIME + REST_TIME\n      })\n\n    }, 1000)\n\n  }\n  return (\n    <View style={[styles.container, { backgroundColor: color }]}>\n      <p> {count}</p>\n      {started ? <Button title='Stop' onPress={stop} /> : <Button title=\"Start\" onPress={start} />}\n      {started && !paused ? <Button title='Pause' onPress={pause} /> : null}\n      {started && paused ? <Button title='Resume' onPress={resume} /> : null}\n\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}