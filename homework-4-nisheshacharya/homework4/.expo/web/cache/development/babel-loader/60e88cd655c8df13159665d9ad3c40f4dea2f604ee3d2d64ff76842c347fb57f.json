{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useRef } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    started = _useState2[0],\n    setStarted = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    paused = _useState4[0],\n    setPaused = _useState4[1];\n  var _useState5 = useState(3 + 2),\n    _useState6 = _slicedToArray(_useState5, 2),\n    count = _useState6[0],\n    setCount = _useState6[1];\n  var _useState7 = useState('white'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    color = _useState8[0],\n    setColor = _useState8[1];\n  var ref = useRef(null);\n  var _useState9 = useState({\n      med_time: 3,\n      rest_time: 2\n    }),\n    _useState10 = _slicedToArray(_useState9, 2),\n    time = _useState10[0],\n    setTime = _useState10[1];\n  var clearTimer = function clearTimer() {\n    if (ref.current) {\n      clearInterval(ref.current);\n      ref.current = null;\n    }\n  };\n  var reset = function reset() {\n    clearTimer();\n    setColor('white');\n    setStarted(false);\n    setPaused(false);\n  };\n  var startTimer = function startTimer() {\n    clearTimer();\n    ref.current = setInterval(function () {\n      setCount(function (prev) {\n        if (prev > time.rest_time) {\n          setColor('green');\n        }\n        if (prev == time.rest_time) {\n          setColor('orange');\n        }\n        if (prev > 0) {\n          return prev - 1;\n        }\n        reset();\n        return time.med_time + time.rest_time;\n      });\n    }, 1000);\n  };\n  var start = function start() {\n    setStarted(true);\n    setColor(\"green\");\n    startTimer();\n  };\n  var stop = function stop() {\n    reset();\n    setCount(time.med_time + time.rest_time);\n  };\n  var pause = function pause() {\n    clearTimer();\n    setPaused(!paused);\n  };\n  var resume = function resume() {\n    startTimer();\n    setPaused(!paused);\n  };\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: color\n    }],\n    children: [_jsx(Image, {\n      source: require(\"./media/meditation.jpg\"),\n      style: {\n        width: 200,\n        height: 200\n      }\n    }), _jsxs(\"p\", {\n      children: [\" \", count]\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(View, {\n        style: styles.medInput,\n        children: _jsx(TextInput, {\n          placeholder: \"Meditation Time\"\n        })\n      }), _jsx(View, {\n        style: styles.restInput,\n        children: _jsx(TextInput, {\n          placeholder: \"Rest Time\"\n        })\n      })]\n    }), started ? _jsx(Button, {\n      title: \"Stop\",\n      onPress: stop\n    }) : _jsx(Button, {\n      title: \"Start\",\n      onPress: start\n    }), started && !paused ? _jsx(Button, {\n      title: \"Pause\",\n      onPress: pause\n    }) : null, started && paused ? _jsx(Button, {\n      title: \"Resume\",\n      onPress: resume\n    }) : null]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputContainer: {\n    flex: 0.5,\n    flexDirection: 'row',\n    padding: 2\n  }\n});","map":{"version":3,"names":["useState","Button","StyleSheet","View","Image","TextInput","useRef","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","started","setStarted","_useState3","_useState4","paused","setPaused","_useState5","_useState6","count","setCount","_useState7","_useState8","color","setColor","ref","_useState9","med_time","rest_time","_useState10","time","setTime","clearTimer","current","clearInterval","reset","startTimer","setInterval","prev","start","stop","pause","resume","style","styles","container","backgroundColor","children","source","require","width","height","inputContainer","medInput","placeholder","restInput","title","onPress","create","flex","alignItems","justifyContent","flexDirection","padding"],"sources":["D:/CS571 React Native/Home Work/Day4/homework-4-nisheshacharya/meditation/App.js"],"sourcesContent":["\nimport { useState } from 'react';\nimport { Button, StyleSheet, View, Image, TextInput } from 'react-native';\nimport { useRef } from 'react';\n\n// const time.med_time = 3;\n// const time.rest_time = 2;\n\nexport default function App() {\n  const [started, setStarted] = useState(false);\n  const [paused, setPaused] = useState(false);\n  const [count, setCount] = useState(3 + 2);\n  const [color, setColor] = useState('white')\n  const ref = useRef(null);\n\n  const [time, setTime] = useState({ med_time: 3, rest_time: 2 })\n\n\n\n  const clearTimer = () => {\n    if (ref.current) {\n      clearInterval(ref.current);\n      ref.current = null;\n    }\n  }\n  const reset = () => {\n    clearTimer();\n    setColor('white');\n    setStarted(false);\n    setPaused(false);\n  }\n\n  const startTimer = () => {\n    clearTimer();\n    ref.current = setInterval(() => {\n      setCount(prev => {\n        if (prev > time.rest_time) {\n          setColor('green');\n        }\n        if (prev == time.rest_time) {\n          setColor('orange');\n        }\n        if (prev > 0) {\n          return prev - 1;\n        }\n        reset();\n        return time.med_time + time.rest_time\n      })\n\n    }, 1000)\n  }\n\n  const start = () => {\n    setStarted(true);\n    setColor(\"green\");\n    startTimer();\n\n  }\n  const stop = () => {\n    reset();\n    setCount(time.med_time + time.rest_time);\n  }\n  const pause = () => {\n    clearTimer();\n    setPaused(!paused);\n\n  }\n  const resume = () => {\n    startTimer();\n    setPaused(!paused);\n\n  }\n  return (\n    <View style={[styles.container, { backgroundColor: color }]}>\n\n      <Image source={require('./media/meditation.jpg')}\n        style={{ width: 200, height: 200 }} />\n      <p> {count}</p>\n      <View style={styles.inputContainer}>\n\n        <View style={styles.medInput}>\n          <TextInput placeholder='Meditation Time' />\n        </View>\n        <View style={styles.restInput}>\n          <TextInput placeholder='Rest Time' />\n        </View>\n\n      </View>\n      {started ? <Button title='Stop' onPress={stop} /> : <Button title=\"Start\" onPress={start} />}\n      {started && !paused ? <Button title='Pause' onPress={pause} /> : null}\n      {started && paused ? <Button title='Resume' onPress={resume} /> : null}\n\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputContainer: {\n    flex: 0.5,\n    flexDirection: 'row',\n    padding: 2,\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}