{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useRef } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    started = _useState2[0],\n    setStarted = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    paused = _useState4[0],\n    setPaused = _useState4[1];\n  var _useState5 = useState({\n      med_time: 3,\n      rest_time: 2\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    time = _useState6[0],\n    setTime = _useState6[1];\n  var _useState7 = useState('white'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    color = _useState8[0],\n    setColor = _useState8[1];\n  var ref = useRef(null);\n  var initialCount = time.med_time + time.rest_time;\n  var _useState9 = useState(initialCount),\n    _useState10 = _slicedToArray(_useState9, 2),\n    count = _useState10[0],\n    setCount = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    history = _useState12[0],\n    setHistory = _useState12[1];\n  var clearTimer = function clearTimer() {\n    if (ref.current) {\n      clearInterval(ref.current);\n      ref.current = null;\n    }\n  };\n  var reset = function reset() {\n    clearTimer();\n    setColor('white');\n    setStarted(false);\n    setPaused(false);\n  };\n  var startTimer = function startTimer() {\n    clearTimer();\n    ref.current = setInterval(function () {\n      setCount(function (prev) {\n        if (prev > time.rest_time) {\n          setColor('green');\n        }\n        if (prev === time.rest_time) {\n          setColor('orange');\n        }\n        if (prev > 0) {\n          return prev - 1;\n        }\n        saveHistory();\n        reset();\n        return time.med_time + time.rest_time;\n      });\n    }, 1000);\n  };\n  var start = function start() {\n    setStarted(true);\n    setColor(\"green\");\n    startTimer();\n  };\n  var stop = function stop() {\n    reset();\n    setCount(initialCount);\n  };\n  var pause = function pause() {\n    clearTimer();\n    setPaused(!paused);\n  };\n  var resume = function resume() {\n    startTimer();\n    setPaused(!paused);\n  };\n  var textChange = function textChange(field, text) {\n    var newValue = parseInt(text) || 0;\n    setTime(_objectSpread(_objectSpread({}, time), {}, _defineProperty({}, field, newValue)));\n  };\n  var saveHistory = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var currentDate = new Date();\n      var year = currentDate.getFullYear().toString();\n      var month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n      var day = currentDate.getDate().toString().padStart(2, '0');\n      var hour = currentDate.getHours().toString().padStart(2, '0');\n      var minute = currentDate.getMinutes().toString().padStart(2, '0');\n      console.log(year, month, day, hour, minute);\n      var newEntry = {\n        year: year,\n        month: month,\n        day: day,\n        hour: hour,\n        minute: minute\n      };\n      var updatedHistory = [].concat(_toConsumableArray(history), [newEntry]);\n      setHistory(updatedHistory);\n      try {\n        yield AsyncStorage.setItem('meditationHistory', JSON.stringify(updatedHistory));\n      } catch (error) {\n        console.error('Error saving history to AsyncStorage:', error);\n      }\n    });\n    return function saveHistory() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var newCount = time.med_time + time.rest_time;\n    setCount(newCount);\n    var loadHistory = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var savedHistory = yield AsyncStorage.getItem('meditationHistory');\n          if (savedHistory !== null) {\n            setHistory(JSON.parse(savedHistory));\n          }\n        } catch (error) {\n          console.error('Error loading history from AsyncStorage:', error);\n        }\n      });\n      return function loadHistory() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    loadHistory();\n  }, [time]);\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: color\n    }],\n    children: [_jsx(Image, {\n      source: require(\"./media/meditation.jpg\"),\n      style: {\n        width: 200,\n        height: 200\n      }\n    }), _jsxs(Text, {\n      children: [\" \", count]\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(View, {\n        style: styles.textInput,\n        children: _jsx(TextInput, {\n          placeholder: \"Meditation Time\",\n          onChangeText: function onChangeText(text) {\n            return textChange('med_time', text);\n          }\n        })\n      }), _jsx(View, {\n        style: styles.textInput,\n        children: _jsx(TextInput, {\n          placeholder: \"Rest Time\",\n          onChangeText: function onChangeText(text) {\n            return textChange('rest_time', text);\n          }\n        })\n      })]\n    }), started ? _jsx(Button, {\n      title: \"Stop\",\n      onPress: stop\n    }) : _jsx(Button, {\n      title: \"Start\",\n      onPress: start\n    }), started && !paused ? _jsx(Button, {\n      title: \"Pause\",\n      onPress: pause\n    }) : null, started && paused ? _jsx(Button, {\n      title: \"Resume\",\n      onPress: resume\n    }) : null, _jsxs(View, {\n      style: styles.history,\n      children: [_jsx(\"p\", {\n        children: \"Meditation History\"\n      }), _jsx(ScrollView, {\n        children: history.map(function (entry, index) {\n          return _jsx(Text, {\n            children: `${entry.year}-${entry.month}-${entry.day} ${entry.hour}:${entry.minute}`\n          }, index);\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputContainer: {\n    flex: 0.5,\n    flexDirection: 'row',\n    padding: 2\n  },\n  textInput: {\n    borderColor: 'gray',\n    borderWidth: 2,\n    borderRadius: 10,\n    padding: 2,\n    margin: 5,\n    height: 25\n  },\n  history: {\n    flex: 1,\n    padding: 5\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Button","StyleSheet","View","Image","TextInput","Text","ScrollView","useRef","AsyncStorage","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","started","setStarted","_useState3","_useState4","paused","setPaused","_useState5","med_time","rest_time","_useState6","time","setTime","_useState7","_useState8","color","setColor","ref","initialCount","_useState9","_useState10","count","setCount","_useState11","_useState12","history","setHistory","clearTimer","current","clearInterval","reset","startTimer","setInterval","prev","saveHistory","start","stop","pause","resume","textChange","field","text","newValue","parseInt","_objectSpread","_defineProperty","_ref","_asyncToGenerator","currentDate","Date","year","getFullYear","toString","month","getMonth","padStart","day","getDate","hour","getHours","minute","getMinutes","console","log","newEntry","updatedHistory","concat","_toConsumableArray","setItem","JSON","stringify","error","apply","arguments","newCount","loadHistory","_ref2","savedHistory","getItem","parse","style","styles","container","backgroundColor","children","source","require","width","height","inputContainer","textInput","placeholder","onChangeText","title","onPress","map","entry","index","create","flex","alignItems","justifyContent","flexDirection","padding","borderColor","borderWidth","borderRadius","margin"],"sources":["D:/CS571 React Native/Home Work/Day4/homework-4-nisheshacharya/meditation/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, StyleSheet, View, Image, TextInput, Text, ScrollView } from 'react-native';\nimport { useRef } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport default function App() {\n  const [started, setStarted] = useState(false);\n  const [paused, setPaused] = useState(false);\n  const [time, setTime] = useState({ med_time: 3, rest_time: 2 });\n  const [color, setColor] = useState('white');\n  const ref = useRef(null);\n  const initialCount = time.med_time + time.rest_time;\n  const [count, setCount] = useState(initialCount);\n  const [history, setHistory] = useState([]);\n\n  const clearTimer = () => {\n    if (ref.current) {\n      clearInterval(ref.current);\n      ref.current = null;\n    }\n  }\n\n  const reset = () => {\n    clearTimer();\n    setColor('white');\n    setStarted(false);\n    setPaused(false);\n  }\n\n  const startTimer = () => {\n    clearTimer();\n    ref.current = setInterval(() => {\n      setCount(prev => {\n        if (prev > time.rest_time) {\n          setColor('green');\n        }\n        if (prev === time.rest_time) {\n          setColor('orange');\n        }\n        if (prev > 0) {\n          return prev - 1;\n        }\n        saveHistory();\n        reset();\n        return time.med_time + time.rest_time;\n      });\n    }, 1000)\n  }\n\n  const start = () => {\n    setStarted(true);\n    setColor(\"green\");\n    startTimer();\n  }\n\n  const stop = () => {\n    reset();\n    setCount(initialCount);\n  }\n\n  const pause = () => {\n    clearTimer();\n    setPaused(!paused);\n  }\n\n  const resume = () => {\n    startTimer();\n    setPaused(!paused);\n  }\n\n  const textChange = (field, text) => {\n    const newValue = parseInt(text) || 0;\n    setTime({ ...time, [field]: newValue });\n  }\n\n  const saveHistory = async () => {\n    const currentDate = new Date();\n    const year = currentDate.getFullYear().toString();\n    const month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n    const day = currentDate.getDate().toString().padStart(2, '0');\n    const hour = currentDate.getHours().toString().padStart(2, '0');\n    const minute = currentDate.getMinutes().toString().padStart(2, '0');\n\n    console.log(year, month, day, hour, minute);\n\n    const newEntry = { year, month, day, hour, minute };\n    const updatedHistory = [...history, newEntry];\n    setHistory(updatedHistory);\n\n    try {\n      await AsyncStorage.setItem('meditationHistory', JSON.stringify(updatedHistory));\n    } catch (error) {\n      console.error('Error saving history to AsyncStorage:', error);\n    }\n  }\n\n  useEffect(() => {\n    const newCount = time.med_time + time.rest_time;\n    setCount(newCount);\n\n    // Load history \n    const loadHistory = async () => {\n      try {\n        const savedHistory = await AsyncStorage.getItem('meditationHistory');\n        if (savedHistory !== null) {\n          setHistory(JSON.parse(savedHistory));\n        }\n      } catch (error) {\n        console.error('Error loading history from AsyncStorage:', error);\n      }\n    };\n\n    loadHistory();\n  }, [time]);\n\n  return (\n    <View style={[styles.container, { backgroundColor: color }]}>\n      <Image source={require('./media/meditation.jpg')} style={{ width: 200, height: 200 }} />\n      <Text> {count}</Text>\n      <View style={styles.inputContainer}>\n        <View style={styles.textInput}>\n          <TextInput\n            placeholder='Meditation Time'\n            onChangeText={(text) => textChange('med_time', text)}\n          />\n        </View>\n        <View style={styles.textInput}>\n          <TextInput\n            placeholder='Rest Time'\n            onChangeText={(text) => textChange('rest_time', text)}\n          />\n        </View>\n      </View>\n      {started ? <Button title='Stop' onPress={stop} /> : <Button title=\"Start\" onPress={start} />}\n      {started && !paused ? <Button title='Pause' onPress={pause} /> : null}\n      {started && paused ? <Button title='Resume' onPress={resume} /> : null}\n      <View style={styles.history}>\n        <p>Meditation History</p>\n        <ScrollView>\n          {history.map((entry, index) => (\n            <Text key={index}>\n              {`${entry.year}-${entry.month}-${entry.day} ${entry.hour}:${entry.minute}`}\n            </Text>\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputContainer: {\n    flex: 0.5,\n    flexDirection: 'row',\n    padding: 2,\n  },\n  textInput: {\n    borderColor: 'gray',\n    borderWidth: 2,\n    borderRadius: 10,\n    padding: 2,\n    margin: 5,\n    height: 25\n  },\n  history: {\n    flex: 1,\n    padding: 5,\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}