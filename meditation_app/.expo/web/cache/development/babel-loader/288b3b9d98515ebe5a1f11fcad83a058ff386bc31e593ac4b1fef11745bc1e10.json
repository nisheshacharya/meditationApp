{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nexport var mapNotificationResponse = function mapNotificationResponse(response) {\n  return _objectSpread(_objectSpread({}, response), {}, {\n    notification: mapNotification(response.notification)\n  });\n};\nexport var mapNotification = function mapNotification(notification) {\n  var mappedNotification = _objectSpread({}, notification);\n  try {\n    var _mappedNotification$r;\n    var dataString = mappedNotification == null ? void 0 : (_mappedNotification$r = mappedNotification.request) == null ? void 0 : _mappedNotification$r.content['dataString'];\n    if (typeof dataString === 'string') {\n      mappedNotification.request.content.data = JSON.parse(dataString);\n      delete mappedNotification.request.content.dataString;\n    }\n  } catch (e) {\n    console.log(`Error in notification: ${e}`);\n  }\n  return mappedNotification;\n};","map":{"version":3,"names":["mapNotificationResponse","response","_objectSpread","notification","mapNotification","mappedNotification","_mappedNotification$r","dataString","request","content","data","JSON","parse","e","console","log"],"sources":["D:\\practice\\projects\\meditationApp\\meditationApp\\homework-4-nisheshacharya\\homework4\\node_modules\\expo-notifications\\src\\utils\\mapNotificationResponse.ts"],"sourcesContent":["import { Notification, NotificationResponse } from '../Notifications.types';\n\n/**\n * @hidden\n *\n * Does any required processing of a notification response from native code\n * before it is passed to a notification response listener, or to the\n * last notification response hook.\n *\n * @param response The raw response passed in from native code\n * @returns the mapped response.\n */\nexport const mapNotificationResponse = (response: NotificationResponse) => {\n  return {\n    ...response,\n    notification: mapNotification(response.notification),\n  };\n};\n\n/**\n * @hidden\n *\n * Does any required processing of a notification from native code\n * before it is passed to a notification listener.\n *\n * @param notification The raw notification passed in from native code\n * @returns the mapped notification.\n */\nexport const mapNotification = (notification: Notification) => {\n  const mappedNotification: Notification & {\n    request: { content: { dataString?: string } };\n  } = { ...notification };\n  try {\n    const dataString = mappedNotification?.request?.content['dataString'];\n    if (typeof dataString === 'string') {\n      mappedNotification.request.content.data = JSON.parse(dataString);\n      delete mappedNotification.request.content.dataString;\n    }\n  } catch (e: any) {\n    console.log(`Error in notification: ${e}`);\n  }\n  return mappedNotification;\n};\n"],"mappings":";;;AAYA,OAAO,IAAMA,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAIC,QAA8B,EAAI;EACxE,OAAAC,aAAA,CAAAA,aAAA,KACKD,QAAQ;IACXE,YAAY,EAAEC,eAAe,CAACH,QAAQ,CAACE,YAAY;EAAC;AAExD,CAAC;AAWD,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAID,YAA0B,EAAI;EAC5D,IAAME,kBAAkB,GAAAH,aAAA,KAEfC,YAAY,CAAE;EACvB,IAAI;IAAA,IAAAG,qBAAA;IACF,IAAMC,UAAU,GAAGF,kBAAkB,qBAAAC,qBAAA,GAAlBD,kBAAkB,CAAEG,OAAO,qBAA3BF,qBAAA,CAA6BG,OAAO,CAAC,YAAY,CAAC;IACrE,IAAI,OAAOF,UAAU,KAAK,QAAQ,EAAE;MAClCF,kBAAkB,CAACG,OAAO,CAACC,OAAO,CAACC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;MAChE,OAAOF,kBAAkB,CAACG,OAAO,CAACC,OAAO,CAACF,UAAU;;GAEvD,CAAC,OAAOM,CAAM,EAAE;IACfC,OAAO,CAACC,GAAG,CAAC,0BAA0BF,CAAC,EAAE,CAAC;;EAE5C,OAAOR,kBAAkB;AAC3B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}