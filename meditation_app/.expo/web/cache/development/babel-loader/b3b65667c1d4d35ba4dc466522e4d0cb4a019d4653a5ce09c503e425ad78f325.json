{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar backgroundImage = require(\"../media/Meditate.gif\");\nexport default function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    started = _useState2[0],\n    setStarted = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    paused = _useState4[0],\n    setPaused = _useState4[1];\n  var _useState5 = useState({\n      med_minutes: 0,\n      med_seconds: 0,\n      rest_minutes: 0,\n      rest_seconds: 0\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    time = _useState6[0],\n    setTime = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    count = _useState8[0],\n    setCount = _useState8[1];\n  var formatTime = function formatTime(seconds) {\n    var minutes = Math.floor(seconds / 60);\n    var remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  var textChange = function textChange(field, text) {\n    var newValue = parseInt(text) || 0;\n    setTime(_objectSpread(_objectSpread({}, time), {}, _defineProperty({}, field, newValue)));\n  };\n  var start = function start() {\n    setStarted(true);\n  };\n  var stop = function stop() {\n    setStarted(false);\n  };\n  var pause = function pause() {\n    setPaused(!paused);\n  };\n  var resume = function resume() {\n    setPaused(!paused);\n  };\n  return _jsx(ImageBackground, {\n    source: backgroundImage,\n    style: styles.background,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.text,\n        children: \"Meditation for \"\n      }), _jsxs(View, {\n        style: styles.content,\n        children: [_jsx(Image, {\n          source: require(\"../media/AppLogo.png\"),\n          style: styles.logo\n        }), _jsx(Text, {\n          style: styles.text,\n          children: formatTime(count)\n        }), _jsxs(View, {\n          style: styles.inputContainer,\n          children: [_jsxs(View, {\n            style: styles.inputGroup,\n            children: [_jsx(TextInput, {\n              placeholder: \"Min\",\n              onChangeText: function onChangeText(text) {\n                return textChange('med_minutes', text);\n              },\n              keyboardType: \"numeric\",\n              style: styles.inputField\n            }), _jsx(TextInput, {\n              placeholder: \"Sec\",\n              onChangeText: function onChangeText(text) {\n                return textChange('med_seconds', text);\n              },\n              keyboardType: \"numeric\",\n              style: styles.inputField\n            })]\n          }), _jsx(Text, {\n            style: styles.label,\n            children: \"Meditation Time\"\n          }), _jsx(View, {\n            style: styles.gap\n          }), _jsxs(View, {\n            style: styles.inputGroup,\n            children: [_jsx(TextInput, {\n              placeholder: \"Min\",\n              onChangeText: function onChangeText(text) {\n                return textChange('rest_minutes', text);\n              },\n              keyboardType: \"numeric\",\n              style: styles.inputField\n            }), _jsx(TextInput, {\n              placeholder: \"Sec\",\n              onChangeText: function onChangeText(text) {\n                return textChange('rest_seconds', text);\n              },\n              keyboardType: \"numeric\",\n              style: styles.inputField\n            })]\n          }), _jsx(Text, {\n            style: styles.label,\n            children: \"Rest Time\"\n          })]\n        }), started ? _jsx(Button, {\n          title: \"Stop\",\n          onPress: stop\n        }) : _jsx(Button, {\n          title: \"Start\",\n          onPress: start\n        }), started && !paused ? _jsx(Button, {\n          title: \"Pause\",\n          onPress: pause\n        }) : null, started && paused ? _jsx(Button, {\n          title: \"Resume\",\n          onPress: resume\n        }) : null]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  background: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '80%'\n  },\n  logo: {\n    width: 100,\n    height: 100,\n    marginBottom: 20\n  },\n  text: {\n    color: 'white',\n    fontSize: 24\n  },\n  inputContainer: {\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  inputGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  inputField: {\n    width: 80,\n    marginHorizontal: 5,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 10,\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n    color: 'black',\n    textAlign: 'center'\n  },\n  label: {\n    color: 'white',\n    marginTop: 5\n  },\n  gap: {\n    height: 20\n  }\n});","map":{"version":3,"names":["React","useState","ImageBackground","View","Text","StyleSheet","Button","TextInput","Image","jsx","_jsx","jsxs","_jsxs","backgroundImage","require","HomeScreen","_ref","navigation","_useState","_useState2","_slicedToArray","started","setStarted","_useState3","_useState4","paused","setPaused","_useState5","med_minutes","med_seconds","rest_minutes","rest_seconds","_useState6","time","setTime","_useState7","_useState8","count","setCount","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","textChange","field","text","newValue","parseInt","_objectSpread","_defineProperty","start","stop","pause","resume","source","style","styles","background","children","container","content","logo","inputContainer","inputGroup","placeholder","onChangeText","keyboardType","inputField","label","gap","title","onPress","create","flex","justifyContent","alignItems","width","height","marginBottom","color","fontSize","flexDirection","marginHorizontal","borderColor","borderWidth","borderRadius","padding","backgroundColor","textAlign","marginTop"],"sources":["D:/practice/projects/meditationApp/meditationApp/homework-4-nisheshacharya/homework4/screens/HomeScreen.js"],"sourcesContent":["// screens/HomeScreen.js\r\nimport React, { useState } from 'react';\r\nimport {\r\n  ImageBackground,\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Button,\r\n  TextInput,\r\n  Image,\r\n} from 'react-native';\r\n\r\n// Import the background image\r\nconst backgroundImage = require('../media/Meditate.gif'); // Replace with your actual background image path\r\n\r\nexport default function HomeScreen({ navigation }) {\r\n  const [started, setStarted] = useState(false);\r\n  const [paused, setPaused] = useState(false);\r\n  const [time, setTime] = useState({ med_minutes: 0, med_seconds: 0, rest_minutes: 0, rest_seconds: 0 });\r\n  const [count, setCount] = useState(0);\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const textChange = (field, text) => {\r\n    const newValue = parseInt(text) || 0;\r\n    setTime({ ...time, [field]: newValue });\r\n  };\r\n\r\n  const start = () => {\r\n    setStarted(true);\r\n  };\r\n\r\n  const stop = () => {\r\n    setStarted(false);\r\n  };\r\n\r\n  const pause = () => {\r\n    setPaused(!paused);\r\n  };\r\n\r\n  const resume = () => {\r\n    setPaused(!paused);\r\n  };\r\n\r\n  return (\r\n    <ImageBackground source={backgroundImage} style={styles.background}>\r\n      <View style={styles.container}>\r\n        <Text style={styles.text}>Meditation for </Text>\r\n        <View style={styles.content}>\r\n          <Image source={require('../media/AppLogo.png')} style={styles.logo} />\r\n          <Text style={styles.text}>{formatTime(count)}</Text>\r\n          <View style={styles.inputContainer}>\r\n            <View style={styles.inputGroup}>\r\n              <TextInput\r\n                placeholder='Min'\r\n                onChangeText={(text) => textChange('med_minutes', text)}\r\n                keyboardType='numeric'\r\n                style={styles.inputField}\r\n              />\r\n              <TextInput\r\n                placeholder='Sec'\r\n                onChangeText={(text) => textChange('med_seconds', text)}\r\n                keyboardType='numeric'\r\n                style={styles.inputField}\r\n              />\r\n            </View>\r\n            <Text style={styles.label}>Meditation Time</Text>\r\n\r\n            <View style={styles.gap} />\r\n\r\n            <View style={styles.inputGroup}>\r\n              <TextInput\r\n                placeholder='Min'\r\n                onChangeText={(text) => textChange('rest_minutes', text)}\r\n                keyboardType='numeric'\r\n                style={styles.inputField}\r\n              />\r\n              <TextInput\r\n                placeholder='Sec'\r\n                onChangeText={(text) => textChange('rest_seconds', text)}\r\n                keyboardType='numeric'\r\n                style={styles.inputField}\r\n              />\r\n            </View>\r\n            <Text style={styles.label}>Rest Time</Text>\r\n          </View>\r\n\r\n          {started ? <Button title='Stop' onPress={stop} /> : <Button title='Start' onPress={start} />}\r\n          {started && !paused ? <Button title='Pause' onPress={pause} /> : null}\r\n          {started && paused ? <Button title='Resume' onPress={resume} /> : null}\r\n        </View>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  background: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '80%',\r\n  },\r\n  logo: {\r\n    width: 100,\r\n    height: 100,\r\n    marginBottom: 20,\r\n  },\r\n  text: {\r\n    color: 'white',\r\n    fontSize: 24,\r\n  },\r\n  inputContainer: {\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  inputGroup: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  inputField: {\r\n    width: 80,\r\n    marginHorizontal: 5,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n    color: 'black',\r\n    textAlign: 'center',\r\n  },\r\n  label: {\r\n    color: 'white',\r\n    marginTop: 5,\r\n  },\r\n  gap: {\r\n    height: 20,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}