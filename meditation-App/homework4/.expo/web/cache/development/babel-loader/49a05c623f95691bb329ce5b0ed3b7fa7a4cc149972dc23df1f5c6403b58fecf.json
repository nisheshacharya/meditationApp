{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useRef } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Audio } from 'expo-av';\nimport * as Notifications from 'expo-notifications';\nimport * as Device from 'expo-device';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    started = _useState2[0],\n    setStarted = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    paused = _useState4[0],\n    setPaused = _useState4[1];\n  var _useState5 = useState({\n      med_minutes: 0,\n      med_seconds: 0,\n      rest_minutes: 0,\n      rest_seconds: 0\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    time = _useState6[0],\n    setTime = _useState6[1];\n  var _useState7 = useState(require(\"./media/Meditate.gif\")),\n    _useState8 = _slicedToArray(_useState7, 2),\n    backgroundImage = _useState8[0],\n    setBackgroundImage = _useState8[1];\n  var _useState9 = useState('white'),\n    _useState10 = _slicedToArray(_useState9, 2),\n    color = _useState10[0],\n    setColor = _useState10[1];\n  var ref = useRef(null);\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    soundStart = _useState12[0],\n    setSoundStart = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    soundEnd = _useState14[0],\n    setSoundEnd = _useState14[1];\n  var _useState15 = useState(0),\n    _useState16 = _slicedToArray(_useState15, 2),\n    count = _useState16[0],\n    setCount = _useState16[1];\n  var _useState17 = useState([]),\n    _useState18 = _slicedToArray(_useState17, 2),\n    history = _useState18[0],\n    setHistory = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    historyDisplay = _useState20[0],\n    setHistoryDisplay = _useState20[1];\n  useEffect(function () {\n    var loadSounds = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var _yield$Audio$Sound$cr = yield Audio.Sound.createAsync(require(\"./media/sound1.mp3\")),\n          soundStart = _yield$Audio$Sound$cr.sound;\n        var _yield$Audio$Sound$cr2 = yield Audio.Sound.createAsync(require(\"./media/sound2.mp3\")),\n          soundEnd = _yield$Audio$Sound$cr2.sound;\n        setSoundStart(soundStart);\n        setSoundEnd(soundEnd);\n      });\n      return function loadSounds() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    loadSounds();\n  }, []);\n  useEffect(function () {\n    var requestPermissions = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var _yield$Notifications$ = yield Notifications.requestPermissionsAsync(),\n          status = _yield$Notifications$.status;\n        if (status !== 'granted') {\n          alert('You need to enable notifications in settings.');\n        }\n      });\n      return function requestPermissions() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    if (Device.isDevice) {\n      requestPermissions();\n    } else {\n      alert('Must use physical device for Push Notifications');\n    }\n  }, []);\n  var scheduleNotification = function () {\n    var _ref3 = _asyncToGenerator(function* (timeInSeconds) {\n      var trigger = new Date(Date.now() + timeInSeconds * 1000);\n      yield Notifications.scheduleNotificationAsync({\n        content: {\n          title: \"Meditation Time\",\n          body: \"It's time to start your meditation session!\",\n          sound: true\n        },\n        trigger: trigger\n      });\n    });\n    return function scheduleNotification(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var clearTimer = function clearTimer() {\n    if (ref.current) {\n      clearInterval(ref.current);\n      ref.current = null;\n    }\n  };\n  var reset = function reset() {\n    clearTimer();\n    setColor('white');\n    setStarted(false);\n    setPaused(false);\n    setBackgroundImage(require(\"./media/Meditate.gif\"));\n  };\n  var startTimer = function startTimer() {\n    clearTimer();\n    ref.current = setInterval(function () {\n      setCount(function (prev) {\n        var restTimeInSeconds = time.rest_minutes * 60 + time.rest_seconds;\n        if (prev > restTimeInSeconds) {\n          setColor('green');\n        }\n        if (prev === restTimeInSeconds) {\n          setColor('orange');\n          playSound(soundStart);\n          setBackgroundImage(require(\"./media/Rest.gif\"));\n        }\n        if (prev > 0) {\n          return prev - 1;\n        }\n        playSound(soundEnd);\n        saveHistory();\n        reset();\n        showSummary();\n        return getTotalSeconds();\n      });\n    }, 1000);\n  };\n  var playSound = function () {\n    var _ref4 = _asyncToGenerator(function* (sound) {\n      if (sound) {\n        yield sound.playAsync();\n      }\n    });\n    return function playSound(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var start = function start() {\n    setStarted(true);\n    setColor('green');\n    startTimer();\n    var totalSeconds = time.med_minutes * 60 + time.med_seconds;\n    scheduleNotification(totalSeconds);\n  };\n  var stop = function stop() {\n    reset();\n    setCount(getTotalSeconds());\n    saveHistory();\n  };\n  var pause = function pause() {\n    clearTimer();\n    setPaused(!paused);\n  };\n  var resume = function resume() {\n    startTimer();\n    setPaused(!paused);\n  };\n  var textChange = function textChange(field, text) {\n    var newValue = parseInt(text) || 0;\n    setTime(_objectSpread(_objectSpread({}, time), {}, _defineProperty({}, field, newValue)));\n  };\n  var saveHistory = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      var currentDate = new Date();\n      var year = currentDate.getFullYear().toString();\n      var month = (currentDate.getMonth() + 1).toString();\n      var day = currentDate.getDate().toString();\n      var hour = currentDate.getHours().toString().padStart(2, '0');\n      var minute = currentDate.getMinutes().toString().padStart(2, '0');\n      var newEntry = {\n        year: year,\n        month: month,\n        day: day,\n        hour: hour,\n        minute: minute\n      };\n      var updatedHistory = [].concat(_toConsumableArray(history), [newEntry]);\n      setHistory(updatedHistory);\n      try {\n        yield AsyncStorage.setItem('meditationHistory', JSON.stringify(updatedHistory));\n      } catch (error) {\n        console.error('Error saving history to AsyncStorage:', error);\n      }\n    });\n    return function saveHistory() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var showSummary = function showSummary() {\n    var totalMinutes = time.med_minutes + Math.floor(time.med_seconds / 60);\n    var totalSeconds = time.med_seconds % 60;\n    Alert.alert('Meditation Summary', `Meditation Duration: ${totalMinutes} minutes ${totalSeconds} seconds`, [{\n      text: 'OK'\n    }]);\n  };\n  useEffect(function () {\n    setCount(getTotalSeconds());\n    var loadHistory = function () {\n      var _ref6 = _asyncToGenerator(function* () {\n        try {\n          var savedHistory = yield AsyncStorage.getItem('meditationHistory');\n          if (savedHistory !== null) {\n            setHistory(JSON.parse(savedHistory));\n          }\n        } catch (error) {\n          console.error('Error loading history from AsyncStorage:', error);\n        }\n      });\n      return function loadHistory() {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n    loadHistory();\n  }, [time]);\n  var formatTime = function formatTime(seconds) {\n    var minutes = Math.floor(seconds / 60);\n    var remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  var getTotalSeconds = function getTotalSeconds() {\n    return time.med_minutes * 60 + time.med_seconds + time.rest_minutes * 60 + time.rest_seconds;\n  };\n  return _jsx(ImageBackground, {\n    source: backgroundImage,\n    style: styles.background,\n    children: _jsxs(View, {\n      style: styles.content,\n      children: [_jsx(Image, {\n        source: require(\"./media/AppLogo.png\"),\n        style: styles.logo\n      }), _jsx(Text, {\n        style: styles.text,\n        children: formatTime(count)\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsxs(View, {\n          style: styles.inputGroup,\n          children: [_jsx(TextInput, {\n            placeholder: \"Min\",\n            onChangeText: function onChangeText(text) {\n              return textChange('med_minutes', text);\n            },\n            keyboardType: \"numeric\",\n            style: styles.inputField\n          }), _jsx(TextInput, {\n            placeholder: \"Sec\",\n            onChangeText: function onChangeText(text) {\n              return textChange('med_seconds', text);\n            },\n            keyboardType: \"numeric\",\n            style: styles.inputField\n          })]\n        }), _jsx(Text, {\n          style: styles.label,\n          children: \"Meditation Time\"\n        }), _jsx(View, {\n          style: styles.gap\n        }), _jsxs(View, {\n          style: styles.inputGroup,\n          children: [_jsx(TextInput, {\n            placeholder: \"Min\",\n            onChangeText: function onChangeText(text) {\n              return textChange('rest_minutes', text);\n            },\n            keyboardType: \"numeric\",\n            style: styles.inputField\n          }), _jsx(TextInput, {\n            placeholder: \"Sec\",\n            onChangeText: function onChangeText(text) {\n              return textChange('rest_seconds', text);\n            },\n            keyboardType: \"numeric\",\n            style: styles.inputField\n          })]\n        }), _jsx(Text, {\n          style: styles.label,\n          children: \"Rest Time\"\n        })]\n      }), started ? _jsx(Button, {\n        title: \"Stop\",\n        onPress: stop\n      }) : _jsx(Button, {\n        title: \"Start\",\n        onPress: start\n      }), started && !paused ? _jsx(Button, {\n        title: \"Pause\",\n        onPress: pause\n      }) : null, started && paused ? _jsx(Button, {\n        title: \"Resume\",\n        onPress: resume\n      }) : null, _jsxs(View, {\n        style: styles.history,\n        children: [_jsx(TouchableOpacity, {\n          onPressOut: function onPressOut() {\n            return setHistoryDisplay(!historyDisplay);\n          },\n          children: _jsx(Text, {\n            style: styles.historyTitle,\n            children: \"Meditation History\"\n          })\n        }), historyDisplay && _jsx(ScrollView, {\n          style: styles.historyContainer,\n          children: history.map(function (entry, index) {\n            return _jsx(View, {\n              style: styles.historyItem,\n              children: _jsx(Text, {\n                style: styles.historyText,\n                children: `${entry.year}-${entry.month}-${entry.day} ${entry.hour}:${entry.minute}`\n              })\n            }, index);\n          })\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '80%'\n  },\n  logo: {\n    width: 100,\n    height: 100,\n    marginBottom: 20\n  },\n  text: {\n    color: 'white',\n    fontSize: 24\n  },\n  inputContainer: {\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  inputGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  inputField: {\n    width: 80,\n    marginHorizontal: 5,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 10,\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n    color: 'black',\n    textAlign: 'center'\n  },\n  label: {\n    color: 'white',\n    marginTop: 5\n  },\n  gap: {\n    height: 20\n  },\n  history: {\n    flex: 1,\n    padding: 10,\n    marginTop: 20,\n    width: '100%',\n    alignItems: 'center'\n  },\n  historyTitle: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  historyContainer: {\n    width: '100%',\n    padding: 10,\n    borderColor: 'white',\n    borderWidth: 2,\n    borderRadius: 10,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  historyItem: {\n    padding: 10,\n    marginBottom: 5,\n    borderBottomColor: 'white',\n    borderBottomWidth: 1\n  },\n  historyText: {\n    color: 'white',\n    fontSize: 18\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","useRef","Button","StyleSheet","View","ImageBackground","TextInput","Text","ScrollView","TouchableOpacity","Alert","Audio","Notifications","Device","AsyncStorage","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","started","setStarted","_useState3","_useState4","paused","setPaused","_useState5","med_minutes","med_seconds","rest_minutes","rest_seconds","_useState6","time","setTime","_useState7","require","_useState8","backgroundImage","setBackgroundImage","_useState9","_useState10","color","setColor","ref","_useState11","_useState12","soundStart","setSoundStart","_useState13","_useState14","soundEnd","setSoundEnd","_useState15","_useState16","count","setCount","_useState17","_useState18","history","setHistory","_useState19","_useState20","historyDisplay","setHistoryDisplay","loadSounds","_ref","_asyncToGenerator","_yield$Audio$Sound$cr","Sound","createAsync","sound","_yield$Audio$Sound$cr2","apply","arguments","requestPermissions","_ref2","_yield$Notifications$","requestPermissionsAsync","status","alert","isDevice","scheduleNotification","_ref3","timeInSeconds","trigger","Date","now","scheduleNotificationAsync","content","title","body","_x","clearTimer","current","clearInterval","reset","startTimer","setInterval","prev","restTimeInSeconds","playSound","saveHistory","showSummary","getTotalSeconds","_ref4","playAsync","_x2","start","totalSeconds","stop","pause","resume","textChange","field","text","newValue","parseInt","_objectSpread","_defineProperty","_ref5","currentDate","year","getFullYear","toString","month","getMonth","day","getDate","hour","getHours","padStart","minute","getMinutes","newEntry","updatedHistory","concat","_toConsumableArray","setItem","JSON","stringify","error","console","totalMinutes","Math","floor","loadHistory","_ref6","savedHistory","getItem","parse","formatTime","seconds","minutes","remainingSeconds","source","style","styles","background","children","Image","logo","inputContainer","inputGroup","placeholder","onChangeText","keyboardType","inputField","label","gap","onPress","onPressOut","historyTitle","historyContainer","map","entry","index","historyItem","historyText","create","flex","alignItems","justifyContent","width","height","marginBottom","fontSize","flexDirection","marginHorizontal","borderColor","borderWidth","borderRadius","padding","backgroundColor","textAlign","marginTop","fontWeight","borderBottomColor","borderBottomWidth"],"sources":["D:/practice/projects/meditationApp/meditationApp/homework-4-nisheshacharya/homework4/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Button, StyleSheet, View, ImageBackground, TextInput, Text, ScrollView, TouchableOpacity, Alert } from 'react-native';\nimport { Audio } from 'expo-av';\nimport * as Notifications from 'expo-notifications';\nimport * as Device from 'expo-device';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport default function App() {\n  const [started, setStarted] = useState(false);\n  const [paused, setPaused] = useState(false);\n  const [time, setTime] = useState({ med_minutes: 0, med_seconds: 0, rest_minutes: 0, rest_seconds: 0 });\n  const [backgroundImage, setBackgroundImage] = useState(require('./media/Meditate.gif'));\n  const [color, setColor] = useState('white');\n  const ref = useRef(null);\n  const [soundStart, setSoundStart] = useState(null);\n  const [soundEnd, setSoundEnd] = useState(null);\n  const [count, setCount] = useState(0);\n  const [history, setHistory] = useState([]);\n  const [historyDisplay, setHistoryDisplay] = useState(false);\n\n  // Load sounds\n  useEffect(() => {\n    const loadSounds = async () => {\n      const { sound: soundStart } = await Audio.Sound.createAsync(require('./media/sound1.mp3'));\n      const { sound: soundEnd } = await Audio.Sound.createAsync(require('./media/sound2.mp3'));\n      setSoundStart(soundStart);\n      setSoundEnd(soundEnd);\n    };\n\n    loadSounds();\n  }, []);\n\n  // Request notification permissions\n  useEffect(() => {\n    const requestPermissions = async () => {\n      const { status } = await Notifications.requestPermissionsAsync();\n      if (status !== 'granted') {\n        alert('You need to enable notifications in settings.');\n      }\n    };\n\n    if (Device.isDevice) {\n      requestPermissions();\n    } else {\n      alert('Must use physical device for Push Notifications');\n    }\n  }, []);\n\n  // Schedule a notification\n  const scheduleNotification = async (timeInSeconds) => {\n    const trigger = new Date(Date.now() + timeInSeconds * 1000);\n    await Notifications.scheduleNotificationAsync({\n      content: {\n        title: \"Meditation Time\",\n        body: \"It's time to start your meditation session!\",\n        sound: true,\n      },\n      trigger,\n    });\n  };\n\n  const clearTimer = () => {\n    if (ref.current) {\n      clearInterval(ref.current);\n      ref.current = null;\n    }\n  };\n\n  const reset = () => {\n    clearTimer();\n    setColor('white');\n    setStarted(false);\n    setPaused(false);\n    setBackgroundImage(require('./media/Meditate.gif'));\n  };\n\n  const startTimer = () => {\n    clearTimer();\n    ref.current = setInterval(() => {\n      setCount((prev) => {\n        const restTimeInSeconds = time.rest_minutes * 60 + time.rest_seconds;\n\n        if (prev > restTimeInSeconds) {\n          setColor('green');\n        }\n        if (prev === restTimeInSeconds) {\n          setColor('orange');\n          playSound(soundStart); // Play sound when rest time starts\n          setBackgroundImage(require('./media/Rest.gif')); // Change background image\n        }\n        if (prev > 0) {\n          return prev - 1;\n        }\n        playSound(soundEnd); // Play sound when rest time ends\n        saveHistory();\n        reset();\n        showSummary();\n        return getTotalSeconds();\n      });\n    }, 1000);\n  };\n\n  const playSound = async (sound) => {\n    if (sound) {\n      await sound.playAsync();\n    }\n  };\n\n  const start = () => {\n    setStarted(true);\n    setColor('green');\n    startTimer();\n    // Schedule a notification for the meditation start time\n    const totalSeconds = time.med_minutes * 60 + time.med_seconds;\n    scheduleNotification(totalSeconds);\n  };\n\n  const stop = () => {\n    reset();\n    setCount(getTotalSeconds());\n    saveHistory();\n  };\n\n  const pause = () => {\n    clearTimer();\n    setPaused(!paused);\n  };\n\n  const resume = () => {\n    startTimer();\n    setPaused(!paused);\n  };\n\n  const textChange = (field, text) => {\n    const newValue = parseInt(text) || 0;\n    setTime({ ...time, [field]: newValue });\n  };\n\n  const saveHistory = async () => {\n    const currentDate = new Date();\n    const year = currentDate.getFullYear().toString();\n    const month = (currentDate.getMonth() + 1).toString();\n    const day = currentDate.getDate().toString();\n    const hour = currentDate.getHours().toString().padStart(2, '0');\n    const minute = currentDate.getMinutes().toString().padStart(2, '0');\n\n    const newEntry = { year, month, day, hour, minute };\n    const updatedHistory = [...history, newEntry];\n    setHistory(updatedHistory);\n\n    try {\n      await AsyncStorage.setItem('meditationHistory', JSON.stringify(updatedHistory));\n    } catch (error) {\n      console.error('Error saving history to AsyncStorage:', error);\n    }\n  };\n\n  const showSummary = () => {\n    const totalMinutes = time.med_minutes + Math.floor(time.med_seconds / 60);\n    const totalSeconds = time.med_seconds % 60;\n    Alert.alert(\n      'Meditation Summary',\n      `Meditation Duration: ${totalMinutes} minutes ${totalSeconds} seconds`,\n      [{ text: 'OK' }]\n    );\n  };\n\n  useEffect(() => {\n    setCount(getTotalSeconds());\n\n    // Load history\n    const loadHistory = async () => {\n      try {\n        const savedHistory = await AsyncStorage.getItem('meditationHistory');\n        if (savedHistory !== null) {\n          setHistory(JSON.parse(savedHistory));\n        }\n      } catch (error) {\n        console.error('Error loading history from AsyncStorage:', error);\n      }\n    };\n\n    loadHistory();\n  }, [time]);\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  const getTotalSeconds = () => {\n    return time.med_minutes * 60 + time.med_seconds + time.rest_minutes * 60 + time.rest_seconds;\n  };\n\n  return (\n    <ImageBackground source={backgroundImage} style={styles.background}>\n      <View style={styles.content}>\n        <Image source={require('./media/AppLogo.png')} style={styles.logo} />\n        <Text style={styles.text}>{formatTime(count)}</Text>\n        <View style={styles.inputContainer}>\n          <View style={styles.inputGroup}>\n            <TextInput\n              placeholder='Min'\n              onChangeText={(text) => textChange('med_minutes', text)}\n              keyboardType='numeric'\n              style={styles.inputField}\n            />\n            <TextInput\n              placeholder='Sec'\n              onChangeText={(text) => textChange('med_seconds', text)}\n              keyboardType='numeric'\n              style={styles.inputField}\n            />\n          </View>\n          <Text style={styles.label}>Meditation Time</Text>\n\n          <View style={styles.gap} />\n\n          <View style={styles.inputGroup}>\n            <TextInput\n              placeholder='Min'\n              onChangeText={(text) => textChange('rest_minutes', text)}\n              keyboardType='numeric'\n              style={styles.inputField}\n            />\n            <TextInput\n              placeholder='Sec'\n              onChangeText={(text) => textChange('rest_seconds', text)}\n              keyboardType='numeric'\n              style={styles.inputField}\n            />\n          </View>\n          <Text style={styles.label}>Rest Time</Text>\n        </View>\n\n        {started ? <Button title='Stop' onPress={stop} /> : <Button title='Start' onPress={start} />}\n        {started && !paused ? <Button title='Pause' onPress={pause} /> : null}\n        {started && paused ? <Button title='Resume' onPress={resume} /> : null}\n\n        <View style={styles.history}>\n          <TouchableOpacity onPressOut={() => setHistoryDisplay(!historyDisplay)}>\n            <Text style={styles.historyTitle}>Meditation History</Text>\n          </TouchableOpacity>\n\n          {historyDisplay && (\n            <ScrollView style={styles.historyContainer}>\n              {history.map((entry, index) => (\n                <View key={index} style={styles.historyItem}>\n                  <Text style={styles.historyText}>\n                    {`${entry.year}-${entry.month}-${entry.day} ${entry.hour}:${entry.minute}`}\n                  </Text>\n                </View>\n              ))}\n            </ScrollView>\n          )}\n        </View>\n      </View>\n    </ImageBackground>\n  );\n}\n\nconst styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '80%',\n  },\n  logo: {\n    width: 100,\n    height: 100,\n    marginBottom: 20,\n  },\n  text: {\n    color: 'white',\n    fontSize: 24,\n  },\n  inputContainer: {\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  inputGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  inputField: {\n    width: 80,\n    marginHorizontal: 5,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 10,\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n    color: 'black',\n    textAlign: 'center',\n  },\n  label: {\n    color: 'white',\n    marginTop: 5,\n  },\n  gap: {\n    height: 20,\n  },\n  history: {\n    flex: 1,\n    padding: 10,\n    marginTop: 20,\n    width: '100%',\n    alignItems: 'center',\n  },\n  historyTitle: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  historyContainer: {\n    width: '100%',\n    padding: 10,\n    borderColor: 'white',\n    borderWidth: 2,\n    borderRadius: 10,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  historyItem: {\n    padding: 10,\n    marginBottom: 5,\n    borderBottomColor: 'white',\n    borderBottomWidth: 1,\n  },\n  historyText: {\n    color: 'white',\n    fontSize: 18,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}